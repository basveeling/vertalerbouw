gunit Stil;

@header{package vb.stil;}
program:
basic.st      OK
types.st      OK
statements.st OK

// SEMICOLONS
"var int x; x := y"  FAIL // Must end with ;
"var int x x := y;"  FAIL // Must split statements with ;
"var int x; x := y;" OK   // Must end with ;

// COMPOUND
"var int x; read(x); x := print({var int y; read(y); x + y;});" OK
"var int x; read(x); x := print({var int y; read(y); x + y});"  FAIL // must end with ; for compound

// DECLARATIONS
"const int x;"      FAIL // Const must be assigned in declaration
"const int x := 5;" OK
"var int x;"        OK
"var int x := 5;"   FAIL // Var's can't be assigned in declaration

// PRINT
"print(1);"       OK
"print(1)"        FAIL // Must end with ;
"print(1,true);"  OK
"print('b', 10);" OK
"print(a);"       OK
"print false;"    FAIL // Must surround operand with ( )

// READ
"read(1);"   FAIL // Can only read identifiers
"read(a)"    FAIL // Must end with ;
"read(a,b);" OK
"read b;"    FAIL // Must surround operand with ( )

// UNKNOWN STATEMENT
"raed(b);"  FAIL
"while(c);" FAIL

// IF STATEMENT
"if(true) { }"                              OK
"if(true) { };"                             FAIL // Statement must not end with a semicolon
"if(1 >= 2) { }"                            OK
"if(true)"                                  FAIL // Missing { }
"if(false) { const int x := 4; print(x); }" OK
"if(true) { } else { }"                     OK
"if(false) { } else"                        FAIL // Missing { } on else part

// WHILE STATEMENT
"while(true) { }"                              OK
"while(true) { };"                             FAIL // Statement must not end with a semicolon
"while(1 >= 2) { }"                            OK
"while(true)"                                  FAIL // Missing { }
"while(false) { const int x := 4; print(x); }" OK

IDENTIFIER:

"abc123"  OK
"a"       OK
"XYZ@999" FAIL
"123abc"  FAIL

INT_LITERAL:

"00000"     OK
"123456789" OK
"-1"        FAIL